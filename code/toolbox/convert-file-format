#!/usr/bin/env python

import os

# classes
from skyhookdm_singlecell.util import ArgparseBuilder
from skyhookdm_singlecell.datatypes import GeneExpression

# functions
from skyhookdm_singlecell.dataformats import write_data_as_arrow


# ------------------------------
# Parse command-line arguments first
parsed_args, parsed_extra_args = (
    ArgparseBuilder.with_description('Program for converting between specialized file formats')
                   .add_input_dir_arg(
                         required=True
                        ,help_str='Path to root directory of gene expression in MTX format'
                    )
                   .add_input_metadata_file_arg(
                         required=False
                        ,help_str='Path to file containing metadata'
                    )
                   .add_batch_args(
                         required=True
                        ,help_str='Path to file containing metadata'
                    )
                   .add_output_file_arg(
                         required=True
                        ,help_str='Path to the file resulting from the conversion'
                    )
                   .parse_args()
)


# ------------------------------
if __name__ == '__main__':
    if os.path.isdir(parsed_args.input_dir):
        print('>>> parsing gene expression')
        gene_expr = GeneExpression.from_mtx(parsed_args.input_dir)

        print('GeneExpression shape: {}'.format(gene_expr.expression.shape))

        print(gene_expr.expression[:3])
        print('<<< gene expression parsed')

    if not os.path.isfile(parsed_args.output_file):
        print('>>> converting data to Arrow format')
        expr_recordbatches = gene_expr.to_recordbatch()
        print('<<< data format converted')

        print('{} rows in recordbatch'.format(expr_recordbatches.num_rows))

        print('>>> serializing data in Arrow format')
        write_data_as_arrow(
            parsed_args.output_file,
            parsed_args.batch_size,
            parsed_args.batch_offset,
            gene_expr.skyhook_schema_arrow(),
            expr_recordbatches,
        )
        print('<<< data serialized in Arrow format')
